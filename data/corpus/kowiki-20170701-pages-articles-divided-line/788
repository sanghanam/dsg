컴퓨터 글꼴

글꼴은 <link>컴퓨터|컴퓨터</link>로 보는 글자들의 모양새 또는 그 전자적 <link>데이터 파일|데이터 파일</link>을 뜻한다.

표시 방식.
크게 <link>비트맵|래스터 그래픽스</link> 방식과 <link>벡터|벡터 그래픽스</link>, 그리고 스트로크 방식으로 나눌 수 있다.
- 비트맵 방식의 글꼴: 크기가 고정된 점으로 이루어져 있으므로 처리 속도가 빠르지만, 정해진 크기에서만 제대로 보이며 확대시키면 획의 둥근 부분이 마치 계단처럼 보인다.
- 외곽선 방식의 글꼴: 벡터 방식이라고도 하며 크기를 변화시켜도 깨지지 않지만, 선을 그리는 데에 처리 시간이 조금 더 걸린다.
- 스트로크(stroke) 글꼴은 일련의 지정된 선과 부가 정보를 사용하여 특정한 모양의 선의 프로파일, 크기, 모양을 정의한다.

과거 <link>운영 체제|운영 체제</link>에서 사용되는 <link>사용자 인터페이스|사용자 인터페이스</link> 글꼴은 <link>벡터|벡터 그래픽스</link> 방식에 <link>비트맵|래스터 그래픽스</link> 글꼴을 임베딩(추가)하여 넣는 방식을 이용하였다.
 이는 비트맵 글꼴만으로는 축소, 확대, 출력에 문제가 있어(일반적으로는 확대축소가 가능한 비트맵 정보를 넣지 않기 때문에: 실제 글꼴 규격에는 확대, 축소가 가능한 비트맵 정보를 넣을 수 있다.
) <link>벡터|벡터 그래픽스</link> 방식을 같이 이용하는 것이다.

비트맵 방식은 화면에서 해당 비트맵 그대로 보이는 반면, 벡터 방식은 아웃라인이 화면에 표현되면서 왜곡이 발생하게 되고 원치 않는 형태로 깨져보이는 경우가 생기게 되어 있다.
 이런 이유로, 특정 크기에 맞추어 비트맵 디자인을 한 후, 벡터 방식에 임베딩하는 방식을 취하게 되는 것이다.

너비의 변화.
글꼴을 글자들의 너비 변화에 따라 <link>고정폭 글꼴|고정폭 글꼴</link>과 <link>가변폭 글꼴|가변폭 글꼴</link>로 나눌 수 있다.
- 고정폭 글꼴: 글자에 상관 없이 일정한 너비를 할당한다.
- 한글 글꼴의 경우 한글 글자의 폭은 사실 영문 글자의 폭의 두배를 차지한다.
- 가변폭 글꼴: 글자에 따라 변화된 너비를 할당한다.
- 넓은 너비: W와 같은 글자에는 넓은 너비를 할당한다.
- 좁은 너비: i와 같은 글자에는 좁은 너비를 할당한다.
좀 더 세밀하게 모습을 조정하기 위해서 여러 방법이 도입되었는데, 이를테면 'VA'와 같이 일반적인 방법으로는 <link>커닝|커닝</link>(자간 여백)이 많은 경우 폰트 자체에 커닝 문자 쌍의 정보가 있거나 수동으로 커닝을 직접 지정해 주는 방법 등을 사용하기도 한다.

문자들에 따라서 가변폭 글꼴을 많이 쓰지 않거나 아예 쓰기 힘든 경우도 자주 있다.
 이를테면, <link>한자|한자</link>는 가변폭 글꼴을 만들기 힘들며, 그 영향으로 <link>가나|가나 (문자)</link>나 <link>한글|한글</link> 글꼴도 고정폭인 경우가 많다.
글꼴의 속성.
글꼴은 컴퓨터에서 표시될때에 여러가지 속성 설정에 의해 영향을 받는다.
 <link>타이포그래피 디자인|타이포그래피 디자인</link>에서는 다음과 같은 요소가 있다.
- 크기: 글꼴의 크기는 <link>포인트|포인트</link>(point) 단위를 쓴다 보통 컴퓨터 글꼴에서는 9~12포인트를 많이 쓰며 6포인트 이하의 글꼴은 대단히 알아보기 힘들어 질 수 있다.
- 정렬: 오른쪽 줄맞춤, 왼쪽 줄맞춤, 양쪽 줄맞춤, 가운데 줄맞춤을 주로 사용한다.
- 과부와 고아: 어떤 단어가 문장에서 혼자 따로 떨어져서 표시되면 과부(widow)라고 하고 문단의 시작에 떨어져있으면 고아(orphan)이라고 한다.
- 줄길이: 문단의 줄길이는 너무 많지도 적지도 않은 <link>과유불급|과유불급</link>의 원칙을 따른다.
- <link>레딩|레딩 (타이포그래피)</link>(leading): 행간 혹은 줄 사이의 수직적 공간을 말한다.
 보통 글꼴 크기의 20% 정도 크게 한다.
 너무 붙어 있거나 떨어져 있으면 읽기 힘들어진다.
- <link>커닝|커닝</link>(kerning): 글자간, 자간은 글자간의 수평적 공간을 말한다.
 보통은 글자들을 충분히 나타낼만한 크기여야한다.

글꼴 형식.
타입 1, 타입 3 글꼴.
<link>타입 1, 타입 3 글꼴|포스트스크립트 글꼴</link>은 <link>어도비|어도비 시스템즈</link>사가 전문 디지털 타이프세팅을 위하여 개발한 것이다.
 <link>포스트스크립트|포스트스크립트</link>를 사용하면 입방 <link>베지에 곡선|베지에 곡선</link>의 외곽선 글꼴이 된다.
 타입 1 글꼴은 포스트스크립트 언어의 부분집합에 제한을 받으며 어도비의 힌팅 시스템을 사용하여 매우 광범위하게 쓰였다.
 타입 3 글꼴은 포스트스크립트 언어의 무제한적 사용을 허용하지만 힌팅 정보가 포함되어 있지 않아 저해상도의 기기 (도트 매트릭스 프린터와 컴퓨터 화면)에서 깨지는 현상이 나타날 수 있다.

오픈타입 글꼴.
<link>오픈타입|오픈타입</link>은 <link>어도비|어도비 시스템즈</link>와 <link>마이크로소프트|마이크로소프트</link>가 설계한 <link>스마트폰트|스마트폰트</link> 시스템이다.
 오픈타입 글꼴은 넓은 범위의 메타데이터를 곁들여 트루타입이나 타입 1 (실제로 <link>CFF|컴팩트 폰트 포맷</link>) 포맷의 외곽선을 포함하고 있다.

트루타입 글꼴.
<link>트루타입|트루타입</link>은 <link>애플|애플 (기업)</link>이 개발한 글꼴 체제이다.
 타입 1 글꼴을 대체할 목적으로 만들어졌다.
 타입 1 글꼴과 달리 트루타입은 <link>베지에 곡선|베지에 곡선</link>으로 그려진다.
 현재에 이르러 널리 쓰이고 있으며 모든 주요 운영 체제에 적용되고 있다.

메타폰트.
<link>메타폰트|메타폰트</link>(METAFONT)는 다른 종류의 글꼴이다.
 트루타입과 달리 벡터 글꼴의 체제를 갖추었다.

관련 기술.
웹 폰트.
<link>웹 폰트|웹 폰트</link>는 동적 폰트(dynamic font)의 일종으로 볼 수 있다.
 동적 폰트는 글꼴이 사용자의 컴퓨터에 설치되어 있지 않아도 볼 수 있거나 사용할 수 있도록 제안된 개념이며, 일반적으로 웹 폰트와 같은 뜻으로 쓰이고 있다.

웹 폰트의 포맷은 비트스트림의 .pfr 형식과 마이크로소프트의 .eot 형식, 이렇게 2가지가 있었다.
 하지만, .pfr은 <link>넷스케이프|넷스케이프</link>와 <link>모질라|모질라</link>까지 지원하고 <link>파일 형식|파일 형식</link>을 공개하였음에도 불구하고 이제는 쓰이지 않고 있다.
 반면, .eot는 마이크로소프트의 특정 버전 이상의 <link>인터넷 익스플로러|인터넷 익스플로러</link>에서만 지원되고 파일 형식은 공개되지 않아 다른 <link>웹 브라우저|웹 브라우저</link>에서는 사용하지 못한다.
 .eot 형식은 MS의 WEFT 응용 프로그램을 이용해 제작할 수 있으며, 웹폰트가 사용될 사이트의 URL(인터넷 주소)을 넣을 수 있어 해당 URL이 아니면 사용할 수 없어 불법 사용 또한 어느 정도 막을 수 있다.

웹 폰트가 사용된 웹페이지에 접속하면, 웹 브라우저에서 웹폰트를 접속자의 컴퓨터에 자동으로 내려받아 해당 웹페이지를 웹폰트로 보여준다.
 따라서 웹폰트의 파일 용량이 크면 클수록 내려 받는 데 시간이 더 걸리게 되고, 실제 웹페이지가 웹 폰트로 대체되어 표시되는 데에 약간의 시간이 걸린다.
 웹 폰트를 쓰는 일부 포털에서는 해당 글꼴이 비트맵 방식이면 출력하지 못하는 문제가 있다.

eot와 pfr 말고도 GlyphGate에서 개발한 웹 폰트 형태가 있다.

표시 기술.
앤티에일리어싱.
<link>앤티에일리어싱|앤티에일리어싱</link>은 높은 해상도의 신호를 낮은 해상도에서 나타낼 때 생기는 에일리어싱(깨진 패턴)을 최소화하는 방법이다.
 수많은 운영 체제와 그래픽 소프트웨어에서 이미 이 기술을 기본 지원하고 있다.

클리어타입.
<link>클리어타입|클리어타입</link>은 <link>마이크로소프트|마이크로소프트</link>에서 개발한 기술로, <link>액정|액정</link> 화면에서 더욱 깨끗하게 글자를 표시할 수 있는 기술이다.
 액정 화면의 한 개 픽셀은 RGB(빨간색, 녹색, 파란색)의 3개의 서브픽셀(sub-pixel)로 구성되어 있는데, 이 특징을 최대한 활용한 기술이라 할 수 있다.
 반면, 클리어타입은 가로방향으로만 RGB의 서브픽셀을 이용한 안티에일리어싱 효과가 나기 때문에, 세로방향에 대해서는 계단 현상의 느낌이 그대로 나올 수밖에 없다.
 따라서, 이런 문제를 해결하기 위해 <link>클리어타입|클리어타입</link>에 세로방향으로 <link>안티알리아싱|안티알리아싱</link> 효과를 더한 래스터라이징 기술을 개발하여 발표하였고, 그로 인해, 외곽선의 계단현상이 최소화되어 보다 나은 래스터라이징 효과를 가져오고 있다.
 다양한 해상도에서도 정확한 래스터라이징을 하기 위해서는 기본적으로 힌팅 정보를 필요로 하는데 거의 모든 상용 <link>한글|한글</link> 글꼴에는 제대로 된 힌팅 정보를 지원하지 않기 때문에 클리어타입의 기술을 이용하더라도 선명성에서 큰 향상은 없는 편이다.
 마이크로소프트의 <link>윈도 비스타|윈도 비스타</link>, <link>윈도 7|윈도 7</link>에 기본 글꼴로 사용되는 한글 글꼴 ‘<link>맑은 고딕|맑은 고딕</link>’은 한글 글꼴의 힌팅 정보를 포함하여 클리어타입 기술이 본격적으로 적용되는 최초의 한글 글꼴이다.

함께보기.
- <link>오픈 폰트 라이선스|오픈 폰트 라이선스</link>
바깥 고리.
- <a href="http%3A//tldp.org/HOWTO/Font-HOWTO/fontech.html">Font Technologies chapter of the LDP's Font-HOWTO</a>
- <a href="http%3A//ieeexplore.ieee.org/xpl/freeabs_all.jsp%3Farnumber%3D667294">History and technology of computer fonts</a>, Annals of the History of Computing, IEEE, Apr-Jun 1998, Vol. 20, Issue 2, pages 30-34, ISSN 1058-6180.


