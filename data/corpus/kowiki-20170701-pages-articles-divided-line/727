알고리즘

알고리즘(<link>라틴어|라틴어</link>, <link>독일어|독일어</link>: Algorithmus, , )이란 어떠한 문제를 해결하기 위한 여러 동작들의 모임이다.
 유한성을 가지며, 언젠가는 끝나야 하는 속성을 가지고 있다.
 수학과 컴퓨터 과학에서 알고리즘이란 작동이 일어나게 하는 내재하는 단계적 집합이다.
 알고리즘은 연산, 데이터 진행 또는 자동화된 추론을 수행한다.

알고리즘의 정의.
알고리즘은 다음의 조건을 만족해야 한다.
- 입력 : 외부에서 제공되는 자료가 0개 이상 존재한다.
- 출력 : 적어도 1개 이상의 서로 다른 결과를 내어야 한다.
(즉 모든 입력에 하나의 출력이 나오면 안됨)다.
- 명확성 : 수행 과정은 명확하고 모호하지 않은 명령어로 구성되어야 한다.
- 유한성(종결성) : 유한 번의 명령어를 수행 후(유한 시간 내)에 종료한다.
- 효율성 : 모든 과정은 명백하게 실행 가능(검증 가능)한 것이어야 한다.
이는 <link>오토마타|오토마타 이론</link>와 관련이 있다.

연구 분야.
- 고안 : 완벽한 자동화를 통한 알고리즘의 개발은 거의 불가능하다.
 따라서 이미 증명된 유용한 알고리즘들을 습득함으로써 보다 유용한 알고리즘을 개발하는데 그 의미가 있다.
- 검증 : 고안된 알고리즘이 합당한 입력값에 대하여 올바른 결과를 계산해 내는지를 밝히는 절차가 필요하다.
 알고리즘 검증은 고안된 알고리즘이 프로그래밍 언어와는 독립적으로 올바르게 작동할 수 있음을 보여주는 데 그 목적이 있다.
- 분석 : 고안된 알고리즘을 실행하기 위해 필요한 실행시간과 필요로 하는 기억장치를 결정하는 것이다.
- 테스트 : 디버깅, 성능분석

분석 기준.
- 정확성 : 적당한 입력에 대해서 유한 시간내에 올바른 답을 산출하는가를 판단.
- 작업량 : 전체 알고리즘에서 수행되는 가장 중요한 연산들만으로 작업량을 측정. 해결하고자 하는 문제의 중요 연산이 여러개인 경우에는 각각의 중요 연산들의 합으로 간주하거나 중요 연산들에 가중치를 두어 계산
- 기억 장소 사용량
- 최적성 :그 알고리즘보다 더 적은 중요 연산을 수행하는 알고리즘은 없는가? 최적이란 가장 '잘 알려진' 이 아니라 '가장 좋은'의 의미이다
- <link>복잡도|복잡도 이론</link>.

예.
알고리즘의 예.
가장 단순한 알고리즘 가운데 하나는 임의로 나열된 숫자들 가운데 가장 큰 수를 찾는 것이다.
 이를 해결하기 위해서는 목록 안에 있는 모든 수를 살펴보는 것이다.

같이 보기.
- <link>복잡도 이론|복잡도 이론</link>
- <link>알고리즘|알고리즘 (수학)</link> (algorithm)
- <link>유클리드 호제법|유클리드 호제법</link>


